// <auto-generated />
using System;
using IGRMgr.Modules.Administration.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IGRMgr.Modules.Administration.Infrastructure.Migrations
{
    [DbContext(typeof(AdministrationContext))]
    [Migration("20191219123737_AdministrationInitialOutbox")]
    partial class AdministrationInitialOutbox
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IGRMgr.Modules.Administration.Domain.BusinessPartners.BusinessPartner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("_createDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("_email")
                        .HasColumnName("EmailAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("_firstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("_isActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("_lastName")
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("_name")
                        .HasColumnName("FullName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("_phoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("_updateDate")
                        .HasColumnName("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BusinessPartners","administration");
                });

            modelBuilder.Entity("IGRMgr.Modules.Administration.Domain.Staffs.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("_createDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("_dateOfBirth")
                        .HasColumnName("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("_email")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("_firstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("_isActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("_jobTitle")
                        .HasColumnName("JobTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("_lastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("_middleName")
                        .HasColumnName("MiddleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnName("FullName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("_phoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("_staffNo")
                        .HasColumnName("StaffNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Staffs","administration");
                });

            modelBuilder.Entity("Nubalance.BuildingBlocks.Infrastructure.InternalCommands.InternalCommand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InternalCommands","administration");
                });

            modelBuilder.Entity("Nubalance.BuildingBlocks.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages","administration");
                });

            modelBuilder.Entity("IGRMgr.Modules.Administration.Domain.BusinessPartners.BusinessPartner", b =>
                {
                    b.OwnsOne("IGRMgr.Modules.Administration.Domain.BusinessPartners.BusinessPartnerLocation", "_location", b1 =>
                        {
                            b1.Property<Guid>("BusinessPartnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<string>("PostalCode")
                                .HasColumnName("PostalCode")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<string>("State")
                                .HasColumnName("State")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("nvarchar(150)")
                                .HasMaxLength(150);

                            b1.HasKey("BusinessPartnerId");

                            b1.ToTable("BusinessPartners");

                            b1.WithOwner()
                                .HasForeignKey("BusinessPartnerId");
                        });
                });

            modelBuilder.Entity("IGRMgr.Modules.Administration.Domain.Staffs.Staff", b =>
                {
                    b.OwnsOne("IGRMgr.Modules.Administration.Domain.Staffs.StaffGender", "_gender", b1 =>
                        {
                            b1.Property<Guid>("StaffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnName("Gender")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.HasKey("StaffId");

                            b1.ToTable("Staffs");

                            b1.WithOwner()
                                .HasForeignKey("StaffId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
